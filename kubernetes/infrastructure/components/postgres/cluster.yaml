---
# yaml-language-server: $schema=https://kube-schemas.pages.dev/postgres-operator.crunchydata.com/postgrescluster_v1beta1.json
apiVersion: postgres-operator.crunchydata.com/v1beta1
kind: PostgresCluster
metadata:
  name: &name ${APP}-postgres
spec:
  metadata:
    labels:
      crunchy-userinit.ramblurr.github.com/enabled: "true"
      crunchy-userinit.ramblurr.github.com/superuser: &superuser "postgres"
  postgresVersion: 16
  monitoring:
    pgmonitor:
      exporter:
        resources:
          requests:
            cpu: 10m
            memory: 64M
          limits:
            memory: 512M
  patroni: # turn on sync writes to at least 1 other replica
    dynamicConfiguration:
      synchronous_mode: true
      postgresql:
        max_wal_size: 5GB
        synchronous_commit: "on"
        parameters:
          max_connections: 500
  instances:
    - name: postgres
      metadata:
        labels:
          app.kubernetes.io/name: ${APP}-crunchy-postgres
      replicas: &replicas 3
      dataVolumeClaimSpec:
        storageClassName: local-hostpath
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 20Gi
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: "kubernetes.io/hostname"
          whenUnsatisfiable: "DoNotSchedule"
          labelSelector:
            matchLabels:
              postgres-operator.crunchydata.com/data: postgres
  users:
    # Superuser
    - name: *superuser
      databases: ["postgres"]
      options: "SUPERUSER"
      password:
        type: AlphaNumeric
    # Applications
    - name: "${APP}"
      databases: ["${APP}"]
      password:
        type: AlphaNumeric
  backups:
    pgbackrest:
      configuration: &backupConfig
        - secret:
            name: "${APP}-crunchy-postgres"
      global: &backupFlag
        # Global
        compress-type: "bz2"
        compress-level: "9"
        # PVC
        repo1-retention-full: "30" # days
        repo1-retention-full-type: "time"
        # R2
        repo2-block: "y"
        repo2-bundle: "y"
        repo2-path: /${APP}
        repo2-retention-full: "7" # days
        repo2-retention-full-type: time
        repo2-s3-uri-style: path
        # Minio
        repo3-block: "y"
        repo3-bundle: "y"
        repo3-path: /${APP}
        repo3-retention-full: "30" # days
        repo3-retention-full-type: "time"
        repo3-s3-uri-style: path
      manual:
        repoName: repo1
        options:
          - --type=full
      metadata:
        labels:
          app.kubernetes.io/name: ${APP}-crunchy-postgres-backup
      repos:
        - name: repo1
          volume: &nfs
            volumeClaimSpec:
              storageClassName: nfs-slow #csi-driver-nfs
              volumeName: postgres-nfs
              accessModes: ["ReadWriteMany"]
              resources:
                requests:
                  storage: 1Mi
          schedules:
            full: "30 1 * * 0" # Sunday at 01:30
            differential: "30 1 * * 1-6" # Mon-Sat at 01:30
            incremental: "30 3-23 * * *" # Every hour except 01:30-2:30
        - name: repo2
          s3: &r2
            bucket: crunchy-pgo
            endpoint: ${R2_ENDPOINT}
            region: us-east-1 #https://developers.cloudflare.com/r2/api/s3/api/#bucket-region
          schedules:
            full: "30 2 * * 0" # Sunday at 02:30
            incremental: "30 2 * * 1-6/2" # Mon-Sat at 02:30, every 2nd day
        - name: repo3
          s3: &minio
            bucket: postgresql
            endpoint: s3.${SECRET_DOMAIN}
            region: ca-west-1
          schedules:
            full: "15 1 * * 0" # Sunday at 01:15
            differential: "15 1 * * 1-6" # Mon-Sat at 01:15
            incremental: "15 3-23 * * *" # Every hour except 01:30-2:30
  dataSource:
    pgbackrest:
      stanza: db
      configuration: *backupConfig
      global: *backupFlag
      repo:
        name: repo3
        s3: *minio
  proxy:
    pgBouncer:
      port: 5432
      replicas: *replicas
      config:
        global:
          pool_mode: session
          client_tls_sslmode: prefer
          default_pool_size: "100"
          max_client_conn: "500"
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              postgres-operator.crunchydata.com/cluster: *name
              postgres-operator.crunchydata.com/role: ${APP}-pgbouncer
