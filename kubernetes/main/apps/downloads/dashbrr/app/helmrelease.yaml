# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app dashbrr
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.6.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
  - name: rook-ceph-cluster
    namespace: rook-ceph
  - name: volsync
    namespace: storage
  values:
    controllers:
      dashbrr:
        labels:
          postgres: "true"
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/autobrr/dashbrr
              tag: pr-67
              # tag: v0.2.0@sha256:b3b898d4bf9b463bf802e7af188de45e6ca08eb96e828b4e9cbfde6e418441ad
            env:
              DASHBRR__CONFIG_PATH: /config/config.toml
              DASHBRR__DB_PATH: /cache/._  # cache path is derived from DASHBRR__DB_PATH
              DASHBRR__LISTEN_ADDR: 0.0.0.0:8080
              GIN_MODE: debug
              TZ: ${TIMEZONE}
            envFrom:
            - secretRef:
                name: dashbrr-secret
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: &port 8080
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 100
        fsGroup: 100
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: { type: RuntimeDefault }
    service:
      app:
        controller: *app
        ports:
          http:
            port: *port
    ingress:
      app:
        className: internal
        annotations:
          # gethomepage.dev/enabled: "true"
          # gethomepage.dev/group: Downloads
          # gethomepage.dev/name: dashbrr
          # gethomepage.dev/icon: dashbrr.png
          # gethomepage.dev/description: Media stack management
          # gethomepage.dev/widget.type: dashbrr
          # gethomepage.dev/widget.url: http://dashbrr.downloads
          # gethomepage.dev/widget.key: "{{ `{{HOMEPAGE_VAR_DASHBRR_TOKEN}}` }}"
        hosts:
        - host: "{{ .Release.Name }}.${SECRET_DOMAIN}"
          paths:
          - path: /
            service:
              identifier: app
              port: http
    serviceAccount:
      create: true
      name: dashbrr
    persistence:
      cache:
        type: emptyDir
        sizeLimit: 1Gi
      config:
        type: configMap
        name: dashbrr-config
