---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app plex
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.7.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
    - name: intel-device-plugin-gpu
      namespace: kube-tools
  values:
    controllers:
      plex:
        labels:
          nfsMount: "true"
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/joryirving/plex
              tag: 1.41.4.9463-630c9f557@sha256:545b945ba2ae95e41751841e52c6aaaa9ccc448231234eecb4babdd02594eef3
            env:
              TZ: ${TIMEZONE}
              PLEX_ADVERTISE_URL: https://plex.${SECRET_DOMAIN}:443,http://${SVC_PLEX_ADDR}:32400
              PLEX_NO_AUTH_NETWORKS: ${CLUSTER_CIDR},${TRUSTED_CIDR}
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /identity
                    port: 32400
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 10
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 100m
              limits:
                gpu.intel.com/i915: 1
                memory: 16G
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 100
        fsGroup: 100
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups: [44]
      nodeSelector:
        intel.feature.node.kubernetes.io/gpu: "true"
    service:
      app:
        controller: *app
        type: LoadBalancer
        annotations:
          lbipam.cilium.io/ips: ${SVC_PLEX_ADDR}
        ports:
          http:
            port: 32400
    ingress:
      app:
        className: external
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Video
          gethomepage.dev/name: Plex
          gethomepage.dev/icon: plex.png
          gethomepage.dev/description: Media Player
          gethomepage.dev/widget.type: plex
          gethomepage.dev/widget.url: http://plex.media:32400
          gethomepage.dev/widget.key: "{{ `{{HOMEPAGE_VAR_PLEX_TOKEN}}` }}"
          nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
          nginx.ingress.kubernetes.io/server-snippet: |
            location ~ ^/library/streams {
              proxy_set_header        Range "";
              proxy_pass              http://plex.media.svc.cluster.local:32400;
              proxy_http_version      1.1;
            }
        hosts:
          - host: "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    persistence:
      config:
        existingClaim: *app
      # Separate PVC for cache to avoid backing up cache files
      plex-cache:
        existingClaim: plex-cache
        globalMounts:
          - path: /config/Library/Application Support/Plex Media Server/Cache
      logs:
        type: emptyDir
        globalMounts:
          - path: /config/Library/Application Support/Plex Media Server/Logs
      tmp:
        type: emptyDir
      transcode:
        type: emptyDir
      media:
        type: nfs
        server: voyager.internal
        path: ${SECRET_NFS_DATA}
        globalMounts:
          - path: /data
            subPath: media
            readOnly: true
