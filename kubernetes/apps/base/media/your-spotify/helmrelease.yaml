---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/common-3.1.0/charts/library/common/values.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app your-spotify
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      server:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: yooooomi/your_spotify_server
              tag: 1.12.0@sha256:081b53a4faf529b7e8ceb0147ba10f4780730b729aebf2edb469a8c30441e99a
            env:
              TIMEZONE: ${TIMEZONE}
              # Caveat if it includes Spotify in name: https://github.com/Yooooomi/your_spotify/pull/254
              API_ENDPOINT: &api_endpoint https://spotty.${SECRET_DOMAIN}/api
              CLIENT_ENDPOINT: https://spotty.${SECRET_DOMAIN}
              MONGO_ENDPOINT: mongodb://your-spotify-mongodb:27017/your_spotify #mongo sucks
              PORT: &port 8080
            envFrom:
              - secretRef:
                  name: your-spotify-secret
            probes: &probes
              liveness:
                enabled: true
              readiness:
                enabled: true
              startup:
                enabled: true
            securityContext: &securityContext
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: false
              capabilities: { drop: [ 'ALL' ] }
            resources:
              requests:
                cpu: 10m
                memory: 500Mi
      web:
        containers:
          app:
            image:
              repository: yooooomi/your_spotify_client
              tag: 1.12.0@sha256:9c20e607b82fc66a0b81a45c04d6ccd8fd056add3a3adacc0bb7a6b99460fdb0
            env:
              API_ENDPOINT: *api_endpoint
            probes: *probes
            securityContext: *securityContext
      mongodb: #mongo still sucks
        type: statefulset
        statefulset:
          podManagementPolicy: OrderedReady
        containers:
          app:
            image:
              repository: docker.io/library/mongo
              tag: 6.0.4-focal
            probes: *probes
    service:
      server:
        controller: server
        primary: true
        ports:
          http:
            port: *port
      web:
        controller: web
        ports:
          http:
            port: &webport 3000
      mongodb:
        controller: mongodb
        ports:
          http:
            port: 27017
    route:
      app:
        hostnames:
          - "{{ .Release.Name }}.${SECRET_DOMAIN}"
          - "spotty.${SECRET_DOMAIN}"
        parentRefs:
          - name: external
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs:
              - name: web
                port: *webport
            filters:
              - type: RequestHeaderModifier
                requestHeaderModifier:
                  remove: ["Range"]
              - type: URLRewrite
                urlRewrite:
                  path:
                    type: ReplacePrefixMatch
                    replacePrefixMatch: "/"
            matches:
              - path:
                  type: RegularExpression
                  value: "/?(.*)"
          - backendRefs:
              - name: server
                port: *port
            matches:
              - path:
                  type: RegularExpression
                  value: "/api/?(.*)"
        # limits:
        #   requestBodyBytes: 1048576000  # Equivalent to `proxy-body-size: 1000m`
        # timeouts:
        #   request: 3600s  # Equivalent to `proxy-read-timeout: "3600"`
    persistence:
      configs:
        existingClaim: *app
        advancedMounts:
          mongodb:
            app:
              - path: /data/db
