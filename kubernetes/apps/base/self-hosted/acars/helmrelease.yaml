---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app acars
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      acarsdec:
        annotations:
          reloader.stakater.com/auto: "true"
        replicas: 1
        containers:
          app:
            image:
              repository: ghcr.io/sdr-enthusiasts/docker-acarsdec
              tag: latest-build-412
            env:
              FEED_ID: LILDRUNKENSMURF-ACARS-1
              TZ: America/Edmonton
              SOAPYSDR: driver=rtlsdr
              FREQUENCIES: 130.425;130.850;131.475;131.550;131.725
              # Enabling all frequencies to determine which are actually used
              # RTL-SDR can only scan 2MHz range
              # See https://app.airframes.io/about
              # FREQUENCIES: >-
              #   130.025;130.425;130.450;130.825;130.850;131.125;131.425;
              #   131.450;131.475;131.525;131.550;131.725;131.825;131.850
              OUTPUT_SERVER: acars-acarsrouter
              OUTPUT_SERVER_PORT: "5550"
              OUTPUT_SERVER_MODE: tcp
            resources:
              requests:
                cpu: 150m
                memory: 128Mi
              limits:
                memory: 256Mi
            securityContext:
              privileged: true
      dumpvdl2:
        annotations:
          reloader.stakater.com/auto: "true"
        replicas: 0 # both devices can't use the adapter at once
        containers:
          dumpvdl2:
            image:
              repository: ghcr.io/sdr-enthusiasts/docker-dumpvdl2
              tag: latest-build-348
            env:
              FEED_ID: LILDRUNKENSMURF-VDL2-1
              TZ: America/Edmonton
              SOAPYSDR: driver=rtlsdr
              FREQUENCIES: "136.975;136.650"
              ZMQ_MODE: server
              ZMQ_ENDPOINT: tcp://acars-acarsrouter:45555
            resources:
              requests:
                cpu: 10m
                memory: 128Mi
              limits:
                memory: 256Mi
            securityContext:
              privileged: true
      acarsrouter:
        annotations:
          reloader.stakater.com/auto: "true"
        replicas: 1
        containers:
          acarsrouter:
            image:
              repository: ghcr.io/sdr-enthusiasts/acars_router
              tag: latest-build-494
            env:
              TZ: America/Edmonton
              AR_SEND_UDP_ACARS: acars-acarshub:5550;${ACARSDRAMA_ACARS}
              AR_SEND_UDP_VDLM2: acars-acarshub:5555;${ACARSDRAMA_VDLM2}
              AR_RECV_ZMQ_VDLM2: acars-acarshub:45555
            resources:
              requests:
                cpu: 10m
                memory: 128Mi
              limits:
                memory: 256Mi
      acarsannotator:
        annotations:
          reloader.stakater.com/auto: "true"
        replicas: 1 # active nas
        type: statefulset
        containers:
          acarshub:
            image:
              repository: ghcr.io/tyzbit/acars-annotator
              tag: v0.9.1
            env:
              ACARSHUB_HOST: acars-acarshub
              ACARSHUB_PORT: "15550"
              ANNOTATE_ACARS: "true"
              ACARS_ANNOTATOR_SELECTED_FIELDS: >-
                acarsAircraftTailCode
                acarsExtraURL
                acarsFlightNumber
                acarsFrequencyMHz
                acarsMessageText
              FILTER_CRITERIA_DICTIONARY_PHRASE_LENGTH_MINIMUM: "2"
              FILTER_CRITERIA_HAS_TEXT: "true"
              LOGLEVEL: debug
            envFrom:
              - secretRef:
                  name: acars-annotator
            resources:
              requests:
                cpu: 10m
                memory: 64Mi
              limits:
                memory: 64Mi
      acarshub:
        annotations:
          reloader.stakater.com/auto: "true"
        replicas: 1 # active nas
        type: statefulset
        containers:
          acarshub:
            image:
              repository: ghcr.io/sdr-enthusiasts/docker-acarshub
              tag: v3.8.1Build1405_nohealthcheck
            env:
              TZ: America/Edmonton
              ENABLE_ADSB: "false"
              ENABLE_ACARS: external
              # ENABLE_VDLM: external
              QUIET_MESSAGES: "false" # This logs the messages themselves
            resources:
              requests:
                cpu: 10m
                memory: 128Mi
              limits:
                memory: 512Mi
    defaultPodOptions:
      nodeSelector:
        rtl.feature.node.kubernetes.io/rtlsdr: "true"
    service:
      acarsrouter:
        controller: acarsrouter
        type: ClusterIP
        ports:
          router:
            port: 5550
      dumpvdl2:
        controller: dumpvdl2
        type: ClusterIP
        ports:
          vdl:
            port: 45555
      acarshub:
        controller: acarshub
        type: ClusterIP
        ports:
          http:
            port: &port 80
          acarsinput:
            port: 5550
            protocol: UDP
          vdslinput:
            port: 5555
            protocol: UDP
          acarsoutput:
            port: 15550
          vdsloutput:
            port: 15555
    route:
      acarshub:
        hostnames: ["{{ .Release.Name }}.jory.dev"]
        parentRefs:
          - name: external
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs:
              - name: acarshub
                port: 80
    persistence:
      # usb:
      #   type: hostPath
      #   hostPath: /dev/bus/usb
      #   advancedMounts:
      #     acarsdec:
      #       acarsdec:
      #         - path: /dev/bus/usb
      #     dumpvdl2:
      #       dumpvld2:
      #         - path: /dev/bus/usb
      # run:
      #   type: emptyDir
      acarshub:
        existingClaim: *app
        advancedMounts:
          acarshub:
            acarshub:
              - path: /run/acars
