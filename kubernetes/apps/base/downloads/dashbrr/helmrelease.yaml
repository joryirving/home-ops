# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app dashbrr
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      dashbrr:
        labels:
          postgres: "true"
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/autobrr/dashbrr
              tag: pr-67
              # tag: v0.2.0@sha256:b3b898d4bf9b463bf802e7af188de45e6ca08eb96e828b4e9cbfde6e418441ad
            env:
              DASHBRR__CONFIG_PATH: /config/config.toml
              DASHBRR__DB_TYPE: postgres
              DASHBRR__DB_NAME: *app
              DASHBRR__DB_HOST: dashbrr-pgbouncer.downloads.svc
              DASHBRR__DB_USER: *app
              DASHBRR__DB_PASSWORD:
                valueFrom:
                  secretKeyRef:
                    name: dashbrr-pguser-dashbrr
                    key: password
              DASHBRR__DB_PORT: "5432"
              DASHBRR__DB_PATH: /cache/._ # cache path is derived from DASHBRR__DB_PATH
              DASHBRR__LISTEN_ADDR: 0.0.0.0:8080
              GIN_MODE: debug
              TZ: America/Edmonton
            envFrom:
              - secretRef:
                  name: dashbrr-secret
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: &port 8080
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
        serviceAccount:
          identifier: *app
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 100
        fsGroup: 100
        fsGroupChangePolicy: OnRootMismatch
    service:
      app:
        controller: *app
        ports:
          http:
            port: *port
    route:
      app:
        hostnames: ["{{ .Release.Name }}.jory.dev"]
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs:
              - name: *app
                port: *port
    rbac:
      roles:
        dashbrr:
          type: Role
          rules:
            - apiGroups: [""]
              resources: ["services"]
              verbs: ["get", "watch", "list"]
      bindings:
        dashbrr:
          type: RoleBinding
          roleRef:
            identifier: *app
          subjects:
            - identifier: *app
    serviceAccount:
      dashbrr: {}
    persistence:
      cache:
        type: emptyDir
        sizeLimit: 1Gi
      config:
        type: configMap
        name: dashbrr-config
