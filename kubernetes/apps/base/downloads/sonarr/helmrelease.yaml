# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: sonarr
spec:
  chartRef:
    kind: OCIRepository
    name: app-template
  dependsOn: []
  interval: 15m
  values:
    controllers:
      sonarr:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/joryirving/sonarr
              tag: 4.0.16.2942@sha256:7da8275aece6612d1e6dafccccc8381db297d312dc78b168714643697328a57c
            env:
              SONARR__APP__INSTANCENAME: Sonarr
              SONARR__APP__THEME: dark
              SONARR__AUTH__METHOD: External
              SONARR__AUTH__REQUIRED: DisabledForLocalAddresses
              SONARR__LOG__DBENABLED: "False"
              SONARR__LOG__LEVEL: info
              SONARR__POSTGRES__HOST: "{{ .Release.Name }}-pgbouncer.downloads.svc"
              SONARR__POSTGRES__MAINDB: "{{ .Release.Name }}"
              SONARR__POSTGRES__PASSWORD:
                valueFrom:
                  secretKeyRef:
                    name: "{{ .Release.Name }}-pguser-{{ .Release.Name }}"
                    key: password
              SONARR__POSTGRES__PORT: "5432"
              SONARR__POSTGRES__USER: "{{ .Release.Name }}"
              SONARR__SERVER__PORT: &port 80
              SONARR__UPDATE__BRANCH: develop
              TZ: America/Edmonton
            envFrom:
              - secretRef:
                  name: "{{ .Release.Name }}-secret"
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 100m
              limits:
                memory: 2Gi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 100
        fsGroup: 100
        fsGroupChangePolicy: OnRootMismatch
    service:
      app:
        ports:
          http:
            port: *port
    route:
      app:
        hostnames: ["{{ .Release.Name }}.jory.dev"]
        parentRefs:
          - name: envoy-internal
            namespace: network
    persistence:
      config:
        existingClaim: "{{ .Release.Name }}"
      scripts:
        type: configMap
        name: sonarr-configmap
        defaultMode: 0775
        globalMounts:
          - readOnly: true
      media:
        type: nfs
        server: voyager.internal
        path: /mnt/akademiya/data
        globalMounts:
          - path: /media
      tmp:
        type: emptyDir
