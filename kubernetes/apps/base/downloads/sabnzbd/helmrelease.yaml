# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: sabnzbd
spec:
  chartRef:
    kind: OCIRepository
    name: app-template
  dependsOn: []
  interval: 15m
  values:
    controllers:
      sabnzbd:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/joryirving/sabnzbd
              tag: 4.5.3@sha256:695ec071738b659cec7c22cbddb6391cab9c86203a229175000e856f2e5192d5
            env:
              TZ: America/Edmonton
              CROSS_SEED_HOST: cross-seed.downloads.svc.cluster.local
              SABNZBD__PORT: &port 80
              SABNZBD__HOST_WHITELIST_ENTRIES: >-
                "{{ .Release.Name }}",
                "{{ .Release.Name }}.downloads",
                "{{ .Release.Name }}.downloads.svc",
                "{{ .Release.Name }}.downloads.svc.cluster",
                "{{ .Release.Name }}.downloads.svc.cluster.local",
                sab.jory.dev
            envFrom:
              - secretRef:
                  name: "{{ .Release.Name }}-secret"
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /api?mode=version
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            resources:
              requests:
                cpu: 10m
                memory: 100Mi
              limits:
                memory: 12Gi
    defaultPodOptions:
      annotations:
        k8s.v1.cni.cncf.io/networks: |
          [{
            "name": "multus-vpn",
            "namespace": "network",
            "ips": ["10.69.90.3/24"]
          }]
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 100
        fsGroup: 100
        fsGroupChangePolicy: OnRootMismatch
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values: ["qbittorrent"]
                topologyKey: kubernetes.io/hostname
    service:
      app:
        ports:
          http:
            port: *port
    route:
      app:
        hostnames: ["sab.jory.dev"]
        parentRefs:
          - name: envoy-internal
            namespace: network
    persistence:
      config:
        existingClaim: "{{ .Release.Name }}"
      media:
        type: nfs
        server: voyager.internal
        path: /mnt/user/data
        globalMounts:
          - path: /media/Downloads
      scripts:
        type: configMap
        name: "{{ .Release.Name }}-scripts"
        defaultMode: 0775
        globalMounts:
          - readOnly: true
      tmp:
        type: emptyDir
