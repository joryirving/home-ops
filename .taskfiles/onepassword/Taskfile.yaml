---
version: "3"

vars:
  CLUSTERS:
    - main
    - utility
    - test

tasks:
  push:
    desc: Push all kubeconfig to OnePassword
    cmds:
      - task: :kubernetes:flatten
      - task: push-clusters
      - task: push-combined
    preconditions:
      - op whoami --format=json

  push-clusters:
    desc: Push kubeconfig/talosconfig for all clusters
    cmds:
      - |
        for cluster in {{.CLUSTERS | join " "}}; do
          op item edit kubernetes KUBECONFIG_$(echo "$cluster" | tr '[:lower:]' '[:upper:]')[text]="$(cat {{.ROOT_DIR}}/kubernetes/clusters/$cluster/kubeconfig)"  &>/dev/null
          op item edit kubernetes TALOSCONFIG_$(echo "$cluster" | tr '[:lower:]' '[:upper:]')[text]="$(cat {{.ROOT_DIR}}/talos/$cluster/talosconfig)"  &>/dev/null
        done
    preconditions:
      - op whoami --format=json

  push-combined:
    desc: Push kubeconfig/talosconfig for all clusters
    cmds:
      - task: :kubernetes:flatten
      - op item edit kubernetes KUBECONFIG[text]="$(cat ~/.kube/config)"  &>/dev/null
      - op item edit kubernetes KUBECONFIG_BASE64[text]="$(cat ~/.kube/config | base64 -w 0)"  &>/dev/null
      - op item edit kubernetes TALCONFIG[text]="$(cat ~/.talos/config)"  &>/dev/null
    preconditions:
      - op whoami --format=json

  pull:
    desc: Pull Kubeconfig from OnePassword
    cmds:
      - mkdir -p ~/.kube ~/.talos
      - |
        for cluster in {{.CLUSTERS | join " "}}; do
          mkdir -p {{.ROOT_DIR}}/talos/$cluster
          op item get kubernetes --fields label=KUBECONFIG_$(echo "$cluster" | tr '[:lower:]' '[:upper:]') | tr -d '"' > {{.ROOT_DIR}}/kubernetes/clusters/$cluster/kubeconfig
          op item get kubernetes --fields label=TALOSCONFIG_$(echo "$cluster" | tr '[:lower:]' '[:upper:]') | tr -d '"' > {{.ROOT_DIR}}/talos/$cluster/talosconfig
        done
      - op item get kubernetes --fields label=KUBECONFIG | tr -d '"' > ~/.kube/config
      - op item get kubernetes --fields label=TALCONFIG | tr -d '"' > ~/.talos/config

    preconditions:
      - op whoami --format=json
