---
# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: "Pre-pull Images"

on:
  pull_request:
    branches: ["main"]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number || github.ref }}
  cancel-in-progress: true

jobs:
  pre-job:
    name: Pre-pull Images Pre-Job
    runs-on: ubuntu-latest
    outputs:
      any_changed: ${{ steps.changed-files.outputs.any_changed }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get Changed Files
        id: changed-files
        uses: tj-actions/changed-files@v45
        with:
          files: kubernetes/**

  extract-images:
    name: Extract Images
    needs: pre-job
    runs-on: ubuntu-latest
    if: ${{ needs.pre-job.outputs.any_changed == 'true' }}
    strategy:
      matrix:
        branches: ["default", "pull"]
        cluster: ["main", "utility"]
      fail-fast: false
    outputs:
      default: ${{ steps.output-images.outputs.default }}
      pull: ${{ steps.output-images.outputs.pull }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: "${{ matrix.branches == 'default' && github.event.repository.default_branch || '' }}"

      - name: Gather Images
        uses: docker://ghcr.io/allenporter/flux-local:main@sha256:8606710916a44918f6ba1a0aa761cf1aae5947283868493ad0afcfaea72e08fe
        with:
          args: >-
            get cluster
            --all-namespaces
            --path /github/workspace/kubernetes/clusters/${{ matrix.cluster }}
            --enable-images
            --only-images
            --output json
            --output-file images.json

      - name: Output Images
        id: output-images
        run: echo "${{ matrix.branches }}=$(jq --compact-output '.' images.json)" >> $GITHUB_OUTPUT

  compare-images:
    name: Compare Images
    runs-on: ubuntu-latest
    needs: ["pre-job", "extract-images"]
    outputs:
      images: ${{ steps.compare-images.outputs.images }}
    if: ${{ needs.pre-job.outputs.any_changed == 'true' }}
    steps:
      - name: Compare Images
        id: compare-images
        run: |
          images=$(jq --compact-output --null-input \
              --argjson f1 '${{ needs.extract-images.outputs.default }}' \
              --argjson f2 '${{ needs.extract-images.outputs.pull }}' \
              '$f2 - $f1' \
          )
          echo "images=${images}" >> $GITHUB_OUTPUT

  pre-pull-images:
    name: Pre-pull Images
    runs-on: home-ops-runner
    needs: ["pre-job", "compare-images"]
    strategy:
      matrix:
        images: ${{ fromJSON(needs.compare-images.outputs.images) }}
        cluster: ["main", "utility"]
      max-parallel: 4
      fail-fast: false
    if: ${{ needs.pre-job.outputs.any_changed == 'true' && needs.compare-images.outputs.images != '[]' }}
    steps:
      - name: Configure 1password
        uses: 1password/load-secrets-action/configure@v2
        with:
          service-account-token: ${{ secrets.ONEPASS_SA_TOKEN }}

      - name: Get Secrets
        uses: 1password/load-secrets-action@v2
        with:
          export-env: true
        env:
          TALOSCONFIG_BASE64: op://Kubernetes/kubernetes/TALOSCONFIG_${{ matrix.cluster }}_BASE64

      - name: Write talosconfig
        id: talosconfig
        uses: timheuer/base64-to-file@v1
        with:
          encodedString: "${{ env.TALOSCONFIG_BASE64 }}"
          fileName: talosconfig

      - name: Install talosctl
        run: curl -fsSL https://talos.dev/install | sh

      - name: Pre-pull Image
        env:
          TALOSCONFIG: ${{ steps.talosconfig.outputs.filePath }}
        run: |
          NODE=$(talosctl config info --output json | jq --raw-output '.nodes[]' | shuf -n 1)
          BASE_IMAGE=$(echo ${{ matrix.images }} | sed 's/:.*//')

          if ! talosctl -n $NODE image list | grep -q $BASE_IMAGE; then
            echo "Base image $BASE_IMAGE is not pulled, pulling ${{ matrix.images }} now."
            talosctl -n $NODE image pull ${{ matrix.images }}
          else
            echo "Base image $BASE_IMAGE is already pulled on the node, skipping pull for ${{ matrix.images }}."
          fi

  pre-pull-images-status:
    needs: pre-pull-images
    name: Pre-pull Images Success
    runs-on: ubuntu-latest
    if: ${{ always() }}
    steps:
      - name: Any jobs failed?
        if: ${{ contains(needs.*.result, 'failure') }}
        run: exit 1

      - name: All jobs passed or skipped?
        if: ${{ !(contains(needs.*.result, 'failure')) }}
        run: echo "All jobs passed or skipped" && echo "${{ toJSON(needs.*.result) }}"
