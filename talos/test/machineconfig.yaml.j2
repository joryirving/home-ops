---
# yaml-language-server: $schema=https://raw.githubusercontent.com/siderolabs/talos/refs/heads/release-1.11/website/content/v1.11/schemas/config.schema.json
version: v1alpha1
persist: true
machine:
  type: {{ ENV.MACHINE_TYPE }}
  token: op://Kubernetes/talos-test/MACHINE_TOKEN
  ca:
    crt: op://Kubernetes/talos-test/MACHINE_CA_CRT
    {% if ENV.MACHINE_TYPE == 'controlplane' %}
    key: op://Kubernetes/talos-test/MACHINE_CA_KEY
    {% endif %}
  features:
    rbac: true
    stableHostname: true
    {% if ENV.MACHINE_TYPE == 'controlplane' %}
    kubernetesTalosAPIAccess:
      enabled: true
      allowedRoles: ["os:admin"]
      allowedKubernetesNamespaces: ["actions-runner-system", "kube-tools"]
    {% endif %}
    apidCheckExtKeyUsage: true
    diskQuotaSupport: true
    kubePrism:
      enabled: true
      port: 7445
    hostDNS:
      enabled: true
      resolveMemberNames: true
      forwardKubeDNSToHost: false
  files:
    - op: create
      path: /etc/cri/conf.d/20-customization.part
      content: |
        [plugins."io.containerd.grpc.v1.cri"]
          device_ownership_from_security_context = true
    - op: overwrite
      path: /etc/nfsmount.conf
      permissions: 0o644
      content: |
        [ NFSMount_Global_Options ]
        nfsvers=4.2
        hard=True
        nconnect=16
        noatime=True
        rsize=1048576
        wsize=1048576
  install:
    image: factory.talos.dev/installer/{{ ENV.TALOS_SCHEMATIC }}:v1.11.1
  kubelet:
    image: ghcr.io/siderolabs/kubelet:v1.34.1
    extraArgs:
      max-pods: "200"
    extraConfig:
      featureGates:
        ImageVolume: true
      serializeImagePulls: false
    defaultRuntimeSeccompProfileEnabled: true
    nodeIP:
      validSubnets: ["10.69.1.0/24"]
    disableManifestsDirectory: true
  network:
    interfaces:
      - # 1G
        interface: bond0
        bond:
          deviceSelectors: [{ hardwareAddr: "7c:83:34:b6:6a:*", driver: r8169 }]
          mode: active-backup
        mtu: 1500
        dhcp: true
        vlans:
          - # Services VLAN (K8S svcs)
            { vlanId: 70, dhcp: false, mtu: 1500 }
        vip:
          ip: 10.69.10.202
    nameservers: ["10.69.1.1"]
    disableSearchDomain: true
  nodeLabels:
    intel.feature.node.kubernetes.io/gpu: true
    topology.kubernetes.io/region: k8s
  sysctls:
    fs.inotify.max_user_watches: "1048576"     # Watchdog
    fs.inotify.max_user_instances: "8192"      # Watchdog
    net.core.default_qdisc: fq                 # 10Gb/s
    net.core.rmem_max: "67108864"              # 10Gb/s | Cloudflared / QUIC
    net.core.wmem_max: "67108864"              # 10Gb/s | Cloudflared / QUIC
    net.ipv4.neigh.default.gc_thresh1: "4096"  # Prevent ARP cache overflows
    net.ipv4.neigh.default.gc_thresh2: "8192"  # Prevent ARP cache overflows
    net.ipv4.neigh.default.gc_thresh3: "16384" # Prevent ARP cache overflows
    net.ipv4.tcp_congestion_control: bbr       # 10Gb/s
    net.ipv4.tcp_fastopen: "3"                 # Send and accept data in the opening SYN packet
    net.ipv4.tcp_mtu_probing: "1"              # 10Gb/s | Jumbo frames
    net.ipv4.tcp_rmem: 4096 87380 33554432     # 10Gb/s
    net.ipv4.tcp_wmem: 4096 65536 33554432     # 10Gb/s
    net.ipv4.tcp_window_scaling: "1"           # 10Gb/s
    sunrpc.tcp_slot_table_entries: "128"       # 10Gb/s | NFS
    sunrpc.tcp_max_slot_table_entries: "128"   # 10Gb/s | NFS
    user.max_user_namespaces: "11255"          # User Namespaces
    vm.nr_hugepages: "1024"                    # PostgreSQL
  sysfs:
    devices.system.cpu.intel_pstate.hwp_dynamic_boost: 1
  time:
    disabled: false
    servers: ["time.cloudflare.com"]
  udev:
    rules:
      - # Intel GPU
        SUBSYSTEM=="drm", KERNEL=="renderD*", GROUP="44", MODE="0660"
cluster:
  ca:
    crt: op://Kubernetes/talos-test/CLUSTER_CA_CRT
    {% if ENV.MACHINE_TYPE == 'controlplane' %}
    key: op://Kubernetes/talos-test/CLUSTER_CA_KEY
    {% endif %}
  clusterName: test
  controlPlane:
    endpoint: https://k8s.test.internal:6443
  discovery:
    enabled: true
    registries:
      kubernetes:
        disabled: true
      service:
        disabled: false
  id: op://Kubernetes/talos-test/CLUSTER_ID
  network:
    cni:
      name: none
    dnsDomain: cluster.local
    podSubnets: ["10.42.0.0/16"]
    serviceSubnets: ["10.43.0.0/16"]
  secret: op://Kubernetes/talos-test/CLUSTER_SECRET
  token: op://Kubernetes/talos-test/CLUSTER_TOKEN
  {% if ENV.MACHINE_TYPE == 'controlplane' %}
  aggregatorCA:
    crt: op://Kubernetes/talos-test/CLUSTER_AGGREGATORCA_CRT
    key: op://Kubernetes/talos-test/CLUSTER_AGGREGATORCA_KEY
  allowSchedulingOnControlPlanes: true
  apiServer:
    image: registry.k8s.io/kube-apiserver:v1.34.1
    extraArgs:
      enable-aggregator-routing: true
      feature-gates: ImageVolume=true,MutatingAdmissionPolicy=true
      runtime-config: admissionregistration.k8s.io/v1beta1=true
    certSANs: ["k8s.test.internal", "127.0.0.1"]
    disablePodSecurityPolicy: true
  controllerManager:
    image: registry.k8s.io/kube-controller-manager:v1.34.1
    extraArgs:
      bind-address: 0.0.0.0
  coreDNS:
    disabled: true
  etcd:
    advertisedSubnets: ["10.69.1.0/24"]
    ca:
      crt: op://Kubernetes/talos-test/CLUSTER_ETCD_CA_CRT
      key: op://Kubernetes/talos-test/CLUSTER_ETCD_CA_KEY
    extraArgs:
      listen-metrics-urls: http://0.0.0.0:2381
  proxy:
    disabled: true
    image: registry.k8s.io/kube-proxy:v1.34.1
  secretboxEncryptionSecret: op://Kubernetes/talos-test/CLUSTER_SECRETBOXENCRYPTIONSECRET
  scheduler:
    image: registry.k8s.io/kube-scheduler:v1.34.1
    extraArgs:
      bind-address: 0.0.0.0
    config:
      apiVersion: kubescheduler.config.k8s.io/v1
      kind: KubeSchedulerConfiguration
      profiles:
        - schedulerName: default-scheduler
          plugins:
            score:
              disabled:
                - name: ImageLocality
          pluginConfig:
            - name: PodTopologySpread
              args:
                defaultingType: List
                defaultConstraints:
                  - maxSkew: 1
                    topologyKey: kubernetes.io/hostname
                    whenUnsatisfiable: ScheduleAnyway
  serviceAccount:
    key: op://Kubernetes/talos-test/CLUSTER_SERVICEACCOUNT_KEY
  {% endif %}
---
apiVersion: v1alpha1
kind: UserVolumeConfig
name: local-hostpath
provisioning:
  diskSelector:
    match: disk.model == "KINGSTON SA400S3" && !system_disk
  minSize: 480GB
---
apiVersion: v1alpha1
kind: WatchdogTimerConfig
device: /dev/watchdog0
timeout: 5m
